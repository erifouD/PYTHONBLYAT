from math import sqrt, acos, degrees #импортирование необходимых методов из библиотеки math

#Функиця проверки числа, является ли оно числом Армстронга
def IsArmstrong (num):
    # Число Армстронга — натуральное число, которое в данной системе 
    # счисления равно сумме своих цифр, возведённых в степень, 
    # равную количеству его цифр.

    result = 0 #Объявление переменной для результата
    a = str(num) #Объявление строки по num, чтобы впоследствии была возможность итерироваться
                #По цифрам num
    for i in a: #Цикл по строке a
        #Прибавление текущей цифры в степени количества символов в текущем проверяемом числе
        result += int(i) ** len(a)

    #Если результат равен числу, вернет true, иначе false
    return (result == num)

#Функция получения угла между осью абсцисс и лучом
def GetAngle(A = []):
    Len1 = A[0] #X side
    Len2 = A[1] #Y side
    Len3 = sqrt(Len1 ** 2 + Len2 ** 2)
    Angle = Len1 / Len3
    return degrees(acos(Angle))

#функция создания вектора с координатами в двухмерном пространстве
def MakeVector2D(Name):
    Vec = []
    for i in range(2):
        Vec.append(int(input(f"Введите {Name}{i + 1}: ")))
    return Vec
        
#Функция нахождения минимального угла
def Coordinates():
    X = MakeVector2D("X") #Создание вектора X через функцию
    Y = MakeVector2D("Y") #Создание вектора Y через функцию
    Z = MakeVector2D("Z") #Создание вектора Z через функцию

    #Возврат функции (минимальный угол из 3х существующих) Вы
    return min(GetAngle(X), GetAngle(Y), GetAngle(Z))



#Выполнение задания №1
# Натуральное число, в записи которого n цифр, называется числом Армстронга, если сумма 
# его цифр, возведенная в степень n, равна самому числу. Найти все числа Армстронга от 1 до к
k = int(input("Введите число: ")) #Ввод числа К (по условию)
for i in range(1, k + 1): #Цикл с количеством итераций от 1 до k+1
    if IsArmstrong(i):  #Вызов функции IsArmstrong, которая возвращает true || false в зависимости от того,
                        #является ли число числом Армстронга
        print(i) #Если условие выше == 1, то вывести число
    

#Выполнение задания №2
# Три точки заданы своими координатами X(x1, x2), Y(y1, y2) и Z(z1, z2). Найти и напечатать 
# координаты точки, для которой угол между осью абсцисс и лучом, соединяющим начало 
# координат с точкой, минимальный. Вычисления оформить в виде функции
print('Минимальный угол равен %.2f градусов' % Coordinates())